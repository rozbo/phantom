// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using phantom.Models;
using System;

namespace phantom.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20170824065947_AddUserRole")]
    partial class AddUserRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("phantom.Models.Topic", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<int>("NodeId");

                    b.Property<DateTime>("PostDate");

                    b.Property<int>("ReplyCount");

                    b.Property<DateTime>("ReplyDate");

                    b.Property<string>("Title");

                    b.Property<Guid>("UserId");

                    b.Property<int>("ViewCount");

                    b.HasKey("ID");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("phantom.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("phantom.Models.UserInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Bio");

                    b.Property<string>("Education");

                    b.Property<DateTime>("LastDate");

                    b.Property<string>("Location");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("RegDate");

                    b.Property<int>("Sex");

                    b.Property<string>("Skills");

                    b.Property<Guid>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("phantom.Models.UserInfo", b =>
                {
                    b.HasOne("phantom.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
